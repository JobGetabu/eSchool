<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bunifuImageButton1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADQAAAA0CAYAAADFeBvrAAAABGdBTUEAALGPC/xhBQAABGdJREFUaEPt
        mluoFVUcxo+XJLUeBEnDS1JaahRF4EP0IAQJUWgGEipRUgTRhSCkHgofChRTsQu+GFGCkvSUBkGBaWFF
        RJAUBUpBRESZl7xUBLvff61vxz5nZs2smbVG5eAPPg575vt//73ZM+sy+wx1Ra/XewB9gT5AO9EraB16
        BN2NbkHTZb/w4c1+hmI4hj5F29ETaLIi2kHAbPQuOoP+QD+iz9FWtBSNk7UR1L2P2rBWEe0g4HufE8Q+
        4BrZo6Fml6tuxu/oOkW0w+dEsQdNUlkteLe5qnjsw9ys8vb4rGjeQ+NVWgm+F11FHPZhblJpGgR95yLj
        eUqlleB71NujWKeydAibhz5Ef1lyBCfQ5SoPgscGlFj+RUtVmg9CpyAb9VagQyjEwyoJgsfmmSacRGkD
        QhWEX4q+tE4l7JEtCJ4rvLUR1m+sIvJD+B2uTRGbDGsb47F5rSmNp4hoCJ+A7FIo41rZguA56K3/8xt6
        HJ11r8o5gsYoIj+E73NtiqySJQgeW870+Rm5e4S/tyNbmYS41QV0AeGbfI8CL8kSBM+T3uq+mRt12MHr
        B92Zcl6QLT+Er/Q9CnwkSxA8k5Ctuq/RoWFw/C1Uxm5Z8kP4fN+jgM1HSSMS9dPQcQsbwV5Z8kP4GFTW
        1FggW2vIWO+jhrFDp7uBBvt9nwIrZWkNGQt91DCe0+lK8E1Etlm8H83R4Xowb0ZlbJIlCXLs8h1ksU4F
        wTMVfePcHlu6rdDpajCuciVF9suSBDm2Ve/zE6rdVOJ52bmHc1Snq8EYGhhs0k1eqpBhO+Q+z+pwEDzT
        0WnnHoEs1eAbi0IrhvmytYaMH3xU71d0mQ4HwRO6Bf6UpR7MB3xNgdoVQxXU2yK4v3WJWX1ciUq/Hdgi
        Wz1m9jUFNsvSCuqX+JjeLh2qBN+r3l7gHzRLtnowr3ZlRZIGBup3oK9RzKV2FfoblfGGbHFQsMDXFUga
        GKi15c/VelkJvtdRGfbtzJUtDgpsYBg5X/RZKFtnWA9kW/UyXpOtGRR+7OsLrJalM+jxtm9VwPZW8ffO
        IBSGhsutsnQC+aGds7FRtuZQHFoxfCJLdsi+BA0ucQaxW2CqrM2huGwhaZxCE2XLCrmPuQ7lpG0ECRiH
        QiuGuIVhA8ichUL9fkG1zwdrIeQdF1fkWzRFtmTIsn3YXgsO8JCsaRB0n88r5TCyR8DXo6RLkPqnUQh7
        ftfqZ54CBNl89JWlnidspXCD3k4eCLxNweeD9XobeSHYHkOFZu6usEutk9HUQfgyFFoO5cZGtZlq3R00
        sf3Jm8gWiF1xFC1Sy3MDDWegZ5D9AG070Bz3mM1BNnQn74ovMurgsrgX2XMH+03IZA8nl+t0NNRkyUmC
        hhtRiA2y1YI3S04SNLrL96vkTtmD4MmSkwxNQs+9B9knexA8WXKSoYntheo4KXsQPFlykqHJqPtAo+6S
        G12DgkEj+0/FEM/LVgveLDlZoOFyZBOiPScz2SV0j05HQ01CztDQf+n8FhfM2K9JAAAAAElFTkSuQmCC
</value>
  </data>
</root>